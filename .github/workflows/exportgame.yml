# This is a basic workflow to help you get started with Actions (Dummy dumb)

name: Export game

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: checkout
        uses: actions/checkout@v3.0.2
        # Ensure that you get the entire project history
        with:
          fetch-depth: 0

      # Automatically stores the tag name for later use
      - name: get tag from version
        id: tag_version
        run: |
         echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}

      - name: export game
        id: export
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v4.1.0
        with:
          # Defining all the required inputs
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/3.4.4-stable/Godot_v3.4.4-stable_linux_headless.64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/3.4.4-stable/Godot_v3.4.4-stable_export_templates.tpz
          relative_project_path: ./
          archive_output: true

        # This release action has worked well for me. However, you can most likely use any release action of your choosing.
        # https://github.com/softprops/action-gh-release
      - name: create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
          files: ${{ steps.export.outputs.archive_directory }}/*
